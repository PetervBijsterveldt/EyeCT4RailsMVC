@using EyeCT4RailzMVC.Models
@model EyeCT4RailzMVC.Models.ReparatieBeurt

@{
    ViewBag.Title = "AddReparatie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nieuwe reparatiebeurt</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    List<SelectListItem> selectListItems = new List<SelectListItem>();
    UserRepository userRepo = new UserRepository(new MssqlUserLogic());
    List<User> users = userRepo.ListUsers();
    users.RemoveAll(user => user.Rol != UserType.Technicus);

    foreach (var user in users)
    {
        selectListItems.Add(new SelectListItem
        {
            Text = user.Naam,
            Value = user.Naam
        });
    }

    <div class="form-horizontal">
        <h4>ReparatieBeurt</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Medewerkernaam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Medewerker", selectListItems)
                @Html.ValidationMessageFor(model => model.Medewerkernaam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TramId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TramId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TramId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EindDatum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EindDatum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EindDatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReparatiebeurtType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ReparatiebeurtType, new List<SelectListItem>
                {
                    new SelectListItem {Text= "Grote reparatie", Value = "ReparatieGroot" },
                    new SelectListItem {Text= "Kleine reparatie", Value = "ReparatieKlein" }
                }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReparatiebeurtType, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Terug naar reparatieoverzicht", "Reparatieoverzicht")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
